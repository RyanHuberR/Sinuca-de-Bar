Banco de dados -> Um banco de dados é uma coleção organizada de informações ou dados, geralmente armazenada eletronicamente em um sistema de computador. Um banco de dados é mantido por um sistema de gerenciamento de banco de dados , que permite o acesso, a modificação, a organização e a atualização eficientes dos dados. Dados, DBMS e os programas que usam os dados estão todos juntos, produzindo o que com frequência chamamos de banco de dados, muitas vezes abreviado como um banco de dados. nos bancos de dados mais comuns, os dados são organizados em tabelas em linhas e colunas, o que as torna mais fáceis de manipular e consultar. O SQL é a língua que a maioria dos bancos de dados usa para escrever e consultar informações -> fobnte: https://www.oracle.com/br/database/what-is-database/#:~:text=Um%20banco%20de%20dados%20%C3%A9,banco%20de%20dados%20(DBMS).
Inteligência Artificial -> A inteligência artificial (IA) é a habilidade das máquinas de realizar tarefas semelhantes às que os humanos fazem, como pensar, aprender, planejar e ser criativo. Com a IA, os sistemas tecnológicos conseguem perceber o ambiente ao seu redor, lidar com o que percebem e resolver problemas para alcançar um objetivo específico. O computador recebe dados (que podem ser coletados por sensores, como uma câmera), processa essas informações e toma decisões. Além disso, os sistemas de IA podem ajustar seu comportamento com base na análise dos resultados de suas ações anteriores e aprender a trabalhar de forma mais autônoma.
Algoritimo -> Um algoritmo é uma sequência de raciocínios, instruções ou operações para alcançar um objetivo, sendo necessário que os passos sejam finitos e operados sistematicamente. Um algoritmo, portanto, conta com a entrada (input) e saída (output) de informações mediadas pelas instruções. 
Um sistema operacional é o software essencial que gerencia o hardware de um computador, permitindo a execução de programas e aplicativos. Ele coordena recursos como memória e processamento, proporcionando uma interface entre o usuário e o hardware, facilitando a utilização do dispositivo. A função do sistema operacional é gerenciar os recursos do computador, como memória, processamento e dispositivos de entrada e saída. Ele facilita a execução de programas, oferece uma interface para o usuário e coordena as tarefas para garantir eficiência e estabilidade do sistema. As principais funcionalidades dos sistemas operacionais incluem gerenciamento de recursos, execução de programas, controle de hardware, segurança, multitarefa, e fornecimento de uma interface para o usuário. Eles garantem eficiência, estabilidade e facilidade de uso, permitindo que dispositivos funcionem corretamente e de maneira integrada -> Fonte: https://www.buscape.com.br/notebook/conteudo/o-que-e-sistema-operacional
Nuvem -> Uma rede neural é um programa de aprendizado de máquina, ou modelo, que toma decisões de uma forma semelhante ao cérebro humano, utilizando processos que imitam a maneira como os neurônios biológicos trabalham juntos para identificar fenômenos, avaliar opções e chegar a conclusões. -> Fonte: https://www.ibm.com/br-pt/topics/neural-networks


A-1) Um data center é uma instalação física que abriga sistemas de computação e componentes associados, como servidores, sistemas de armazenamento e equipamentos de rede. O principal objetivo de um data center é garantir que esses sistemas estejam disponíveis e operando de forma contínua, eficiente e segura; Então, um data center é basicamente um lugar seguro e bem gerenciado onde grandes quantidades de dados são processadas e armazenadas; A LGPD estabelece regras para a coleta, uso, armazenamento e compartilhamento de dados pessoais. A principal relação entre data centers e a LGPD é que um é responsável por armazenar e processar muitos desses dados pessoais e o outro serve para regular o tratamento dos dados entre outras coisas relacionadas com os dados. 
A-2) Já na parte que se trata da parte internacional a LGPD fala que ao operar ou contratar data centers no exterior, as empresas brasileiras precisam garantir que estão em conformidade com a LGPD, seja por meio da adequação do país de destino, cláusulas contratuais específicas ou outras garantias adequadas para a proteção dos dados pessoais tendo em vista que os dados.

B-1)  a principal diferença esta na permição de uso, o Formatos proprietários são aqueles que são desenvolvidos e controlados por uma empresa ou entidade específica; O formato é geralmente fechado e sua especificação não é publicamente acessível, exemplos desse formato de arquivo são (Microsoft Word (.docx), Adobe Photoshop (.psd) ), já os Formatos abertos são especificações de arquivo cujas normas e estruturas são publicamente acessíveis e podem ser utilizadas por qualquer pessoa ou organização para criar software que leia ou escreva esses arquivos, exemplos desse formato de arquivo são (CSV (.csv), HTML (.html) ). 
B-2) Dados públicos são informações que estão disponíveis ao público e não estão sujeitas a restrições significativas de acesso. eles podem ser fornecidos por governos, organizações públicas ou privadas, e geralmente têm como objetivo promover transparência. Exemplos de dados públicos (Dados Estatísticos, Registros Públicos, Transparência Governamental). RELAÇÃO - Os dados públicos podem estar em vários formatos de arquivo, tanto proprietários quanto abertos, dependendo de como e por quem são disponibilizados, Exemplos (CSV (Comma-Separated Values), JSON (JavaScript Object Notation), XML (eXtensible Markup Language), TXT (Texto Simples) ). (Abertos) É preferível que dados públicos sejam disponibilizados em formatos abertos. Formatos abertos são aqueles que são amplamente documentados e podem ser usados por qualquer pessoa sem restrições; (Proprietario) Embora seja menos comum, dados públicos também podem ser disponibilizados em formatos proprietários, especialmente se forem fornecidos por empresas ou plataformas específicas, Exemplos (XLS/XLSX (Microsoft Excel), DOC/DOCX (Microsoft Word) ).


Arquivo: é um conjuntop de dados, o que diferencia um arquivo do outro é a regra aplicada nele, outra diferença é a permissão de uso

Python Diferenças:Sintaxe Simples: Python tem uma sintaxe limpa e fácil de ler, o que a torna uma ótima linguagem para iniciantes. Tipagem Dinâmica: Não é necessário declarar o tipo de uma variável. O Python determina o tipo automaticamente.Uso Geral: É usada para uma ampla gama de aplicações, desde scripts simples até sistemas complexos e aprendizado de máquina. 2. Java Diferenças:Sintaxe Verbose: Java tem uma sintaxe mais detalhada e é fortemente tipada. É mais rigorosa em termos de declaração de tipos e estrutura. Compilação: O código Java é compilado em bytecode que roda na Java Virtual Machine (JVM), permitindo portabilidade entre diferentes plataformas. Orientação a Objetos: Java é uma linguagem orientada a objetos, o que significa que quase tudo é tratado como um objeto. 3. JavaScript Diferenças: Desenvolvimento Web: JavaScript é amplamente usado para desenvolvimento web, tanto no lado do cliente quanto no lado do servidor (com Node.js). Tipagem Dinâmica: Similar ao Python, JavaScript é dinamicamente tipado. Execução em Navegadores: JavaScript é executado diretamente no navegador, o que o torna essencial para desenvolvimento front-end. Resumo das Principais Diferenças - Python: Simples e legível, Versátil, ideal para scripts, automação e ciência de dados, utilizado para interpretação.  Java: Verboso e estrito, Aplicações empresariais e móveis,utilizado paracompilação para bytecode e execução na JVM. JavaScript: Flexível e integrado com HTML/CSS, Desenvolvimento web front-end e back-end, utilizado para Execução no navegador e servidor (Node.js).

exemplo de codigo python : print('Hello world!') 

exemplo de codigo java: import java.util.*;
import java.lang.*;
import java.io.*;

// The main method must be in a class named "Main".
class Main {
    public static void main(String[] args) {
        System.out.println("Hello world!");
    }
}
exemplo de codigo javaScript: console.log("Hello world!");


Estrutura de Repetição:

1ª) for i in range(7):
  print (i)

2º) count = 3
while count < 2:
    print (conut)
    count +=1

Estrutura de Tomada de Decisão:

1ª) x = 10
if x > 10:
    print("x é maior que 10")
elif x ==10:
    print ("x é igual a 10")

2ª)x = 3
if x> 9:
    print("x é maior que 9")
elif x == 9:
    print("x é igual a 9")
else:
    print("x é menor que 9")

def bubble_sort(arr):
    n = len(arr)
    # Percorre todos os elementos do array
    for i in range(n):
        # Últimos i elementos já estão na posição correta
        for j in range(0, n - i - 1):
            # Percorre o array do início até o penúltimo elemento não ordenado
            if arr[j] > arr[j + 1]:
                # Troca se o elemento encontrado for maior que o próximo elemento
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

# Exemplo de uso
lista = [64, 34, 25, 12, 22, 11, 90]
sorted_lista = bubble_sort(lista)
print("Lista ordenada:", sorted_lista)


# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
print("Try programiz.pro")
def extrair_vogais(texto):
    # Definindo o conjunto de vogais
    vogais = "aeiouAEIOU"
    # Filtrando e coletando as vogais presentes no texto
    vogais_encontradas = [char for char in texto if char in vogais]
    # Retornando a lista de vogais encontradas como uma string
    return ''.join(vogais_encontradas)

# Exemplo de uso
texto = "Sol radiante, risos vibrantes!"
vogais = extrair_vogais(texto)
print("Vogais encontradas:", vogais)
Try programiz.pro
Vogais encontradas: oaiaeioiae

=== Code Execution Successful ===


todos os codigos ficam 
Try programiz.pro
Vogais encontradas: oaiaeioiae
Lista ordenada: [11, 12, 22, 25, 34, 64, 90]

=== Code Execution Successful ===

segue link com codigos de forma separada e prints em links https://github.com/CarlosfelipeDuran/777bank/blob/main/vogais   /    https://github.com/CarlosfelipeDuran/777bank/blob/main/sequencia%20bubble%20sort  /  


semana 6
1 questão: print("carlos felipe duran", "21", "rio de janeiro", sep="; ")
    
carlos felipe duran; 21; rio de janeiro

2 questão 
def calcular_somar():
    num1 = float(input("pão: "))
    num2 = float (input("canre:"))
    num3 = float (input("coca cola:"))
    resultado = num1 + num2 + num3
    print("resultado:", resultado)
    
    
    
calcular_somar()
pão: 2
canre:4
coca cola:2
resultado: 8.0

=== Code Execution Successful ===


3 questão 

def listar_compras():
  itens = input("Digite os itens da lista de compras (separados por vígula): ")
  lista = [item.strip() for item in itens.split(',')]
  for i, item in enumerate(lista, start=1):
    print(f"Item {i}: {item}")

listar_compras()
Digite os itens da lista de compras (separados por vígula): carne, ovo, pão
Item 1: carne
Item 2: ovo
Item 3: pão

=== Code Execution Successful ===


4 questão

def converter_celsius_para_fahrenheit():
    celsius = float(input("Digite a temperatura em graus Celsius: "))
    fahrenheit = (celsius * 9/5) + 32
    print(f"A temperatura em Fahrenheit é: {fahrenheit}")

converter_celsius_para_fahrenheit()
Digite a temperatura em graus Celsius: 35
A temperatura em Fahrenheit é: 95.0

=== Code Execution Successful ===

5 questão


def coletar_nomes():
    nomes = [] 

    while True:
        nome = input("Digite um nome (ou 'sair' para terminar): ")
        if nome == 'sair':
            break  
        nomes.append(nome)  

    for nome in nomes:
        print(nome)

coletar_nomes()
Digite um nome (ou 'sair' para terminar): carlos
Digite um nome (ou 'sair' para terminar): joão
Digite um nome (ou 'sair' para terminar): sair
carlos
joão

=== Code Execution Successful ===
